<!DOCTYPE html>
<html<%= if @github.authenticated? then ' class="gh-authorized"' end %>>
<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	<title>SassMeister | The Sass Playground!</title>

	<meta http-equiv="Content-Language" content="en-us">
	<meta name="description" content="SassMeister is a playground for Sass. Add some Sass and SassMeister will show you the rendered CSS.">
	<meta name="author" content="Jed Foster and Dale Sande">

	<!--  Mobile Viewport Fix, use at own risk -->
	<meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=0.5 maximum-scale=1.0">
	<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">

	<link rel="stylesheet" href="/stylesheets/style.css" />

	<script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-35407426-1']);
    _gaq.push(['_trackPageview']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script>
</head>

<body>
  <%= partial :"shared/_header" %>
	<section class="main_body">
  	<%= yield %>
	</section>
	<%= partial :"shared/_footer" %>
	

    <script>
      var gist = <%= @gist || 'false' %>;
    </script>



  <% if settings.environment == :production %>
	  <script src="/javascripts/app.js"></script>
	<% else %>
  	<script src="/javascripts/vendor/jquery-1.8.2.js"></script>
    <script src="/javascripts/vendor/ACE-noconflict/ace.js"></script>
    <script src="/javascripts/vendor/jquery.foundation.reveal.js"></script>
    <script src="/javascripts/vendor/bindWithDelay.js"></script>
    <script src="/javascripts/vendor/jquery.minimalect.js"></script>    
    <script src="/javascripts/SassMeister.js"></script>
    <script src="/javascripts/main.js"></script>
    <script src="/javascripts/splitter.js"></script>
    <script src="/javascripts/panel.js"></script>

    <script>
      $('.panel').each(function(index) {
        foo = new Panel($(this).data('name'), {  });
        foo.show();
      });
      
        
        
        
        
        
        /*!
         * Casement.js jQuery plugin
         * Author: @jed_foster
         * Project home: jedfoster.github.io/Casement.js
         * Licensed under the MIT license
         */

        ;(function($) {

          var $dragging = sash_id = parentHeight = null;

          var casement = 'casement',
              defaults = {
                orientation: 'vertical',
                onDragStart: $.noop,
                onDragEnd: $.noop,
                onDrag: $.noop
              };

          function Casement( element, options ) {
            this.element = element;

            this.options = $.extend( {}, defaults, options) ;

            this._defaults = defaults;
            this._name = casement;

            this.init();
          }

          Casement.prototype = {
            parentHeight: null,
            parentOffset: {},

            init: function() {
              var $this = this,
                  height = parentHeight,
                  columns = $($this.element).children().length,
                  paneSize = ( 100 / columns );

              $($this.element).css({position: 'absolute', top: 0, right: 0, bottom: 0, left: 0});
              this.parentHeight = $($this.element).innerHeight();
              this.parentOffset = $($this.element).offset();


              $($this.element).children().each(function(index) {
                $(this).css({
                  // width: paneSize + '%',
                  top: (paneSize * index) + '%',
                  bottom: Math.abs(paneSize * (index -1)) + '%',
                  position: 'absolute'
                });

                if(index !== columns - 1) {
                  $('<div/>').addClass('horizontal sash').css({
                    top: (paneSize * (index + 1)) + '%',
                    // height: height,
                  }).attr('id', 'sash' + (index + 1))
                  .mouseenter(function() {
                    sash_id = 'sash' + (index + 1);
                  })
                  .mouseleave(function() {
                    sash_id = null;
                  })
                  .insertAfter($(this));
                }
              });

              $(document.documentElement).bind("mousedown.casement touchstart.casement", function (event) {
                if (sash_id !== null) {
                  $dragging = null;

                  if( ! $(event.target).hasClass('sash') ) {
                    event.stopPropagation();
                    return false;
                  }
              
                  $('body').css('cursor', 'col-resize');
              
                  $dragging = $(event.target);
              
                  return false;
                }
              })
              .bind("mouseup.casement touchend.casement", function (e) {
                $dragging = null;
                $('#sash_cover').hide();

                $('body').css('cursor', 'auto');
              })
              .bind("mousemove.casement touchmove.casement", function(event) {
                if ($dragging !== null) {
                  $('#sash_cover').show();
                  
                  SassMeister.inputs.sass.resize();
                  SassMeister.outputs.css.resize();

                  SassMeister.inputs.html.resize();
                  
                  $this.resize($dragging, { top: event.pageY, left: event.pageX });
                  return false;
                }
              });

            },

            percentage: function(int) {
              return  Math.abs( int /  ( this.parentHeight * 0.01 ) );
            },

            resize: function(handle, offset) {
              var newHandleOffset = this.percentage(offset.top - this.parentOffset.top);
                handle.css({top: newHandleOffset + '%'});
                handle.prev().css({bottom: (100 - newHandleOffset) + '%'});
                handle.next().css({ top: newHandleOffset + '%' });
            },
          },

          $.fn[casement] = function( options ) {
            var args = arguments;
            if (options === undefined || typeof options === 'object') {
              return this.each(function () {
                if (!$.data(this, 'plugin_' + casement)) {
                  $.data(this, 'plugin_' + casement, new Casement( this, options ));
                }
              });
            } else if (typeof options === 'string' && options[0] !== '_' && options !== 'init') {
              return this.each(function () {
                var instance = $.data(this, 'plugin_' + casement);
                if (instance instanceof Casement && typeof instance[options] === 'function') {
                  instance[options].apply( instance, Array.prototype.slice.call( args, 1 ) );
                }
              });
            }
          }
        })(jQuery);
        
        
        
        
        
        $('#casement').casement();
        
        
        
        
        
        
        
    </script>
  <% end %>
</body>
</html>
